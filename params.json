{"name":"Virtualjoystick.js","tagline":"a virtual joystick library to emulate a joystick on touch screen in javascript","body":"virtualjoystick.js\r\n==================\r\n\r\nIt is small library to emulate a virtual joystick for touchscreen.\r\nFor details, see [\"Letâ€™s Make a 3D Game: Virtual Joystick\"](http://learningthreejs.com/blog/2011/12/26/let-s-make-a-3d-game-virtual-joystick/)\r\npost on \r\n[\"learningthreejs blog\"](http://learningthreejs.com).\r\n\r\nShow Don't Tell\r\n===============\r\n* [examples/basic.html](http://jeromeetienne.github.io/virtualjoystick.js/examples/basic.html)\r\n\\[[view source](https://github.com/jeromeetienne/virtualjoystick.js/blob/master/examples/basic.html)\\] :\r\nIt shows a basic usage of the library.\r\n* [examples/dual.html](http://jeromeetienne.github.io/virtualjoystick.js/examples/dual.html)\r\n\\[[view source](https://github.com/jeromeetienne/virtualjoystick.js/blob/master/examples/dual.html)\\] :\r\nIt shows how to have multiple virtual joystick on the same page\r\n* [examples/stationarybase.html](http://jeromeetienne.github.io/virtualjoystick.js/examples/stationarybase.html)\r\n\\[[view source](https://github.com/jeromeetienne/virtualjoystick.js/blob/master/examples/stationarybase.html)\\] :\r\nIt shows how to have a stationary base. by [@erichlof](https://github.com/erichlof)\r\n* [examples/LimitStickTravelDemo.html](http://jeromeetienne.github.io/virtualjoystick.js/examples/LimitStickTravelDemo.html)\r\n\\[[view source](https://github.com/jeromeetienne/virtualjoystick.js/blob/master/examples/LimitStickTravelDemo.html)\\] :\r\nIt shows how to limit the distance that the stick can travel from its base. by [@erichlof](https://github.com/erichlof)\r\n* [examples/LimitStickTravelDemoStationaryBase.html](http://jeromeetienne.github.io/virtualjoystick.js/examples/LimitStickTravelDemoStationaryBase.html)\r\n\\[[view source](https://github.com/jeromeetienne/virtualjoystick.js/blob/master/examples/LimitStickTravelDemoStationaryBase.html)\\] :\r\nLimited Stick (same as above), but with Stationary Base. by [@erichlof](https://github.com/erichlof)\r\n* [examples/FireButtonDemo.html](http://jeromeetienne.github.io/virtualjoystick.js/examples/FireButtonDemo.html)\r\n\\[[view source](https://github.com/jeromeetienne/virtualjoystick.js/blob/master/examples/FireButtonDemo.html)\\] :\r\nShows how to add a Fire Button to the Joystick. by [@erichlof](https://github.com/erichlof)\r\n\r\nHow To Install It\r\n=================\r\n\r\nYou can install it manually. Just do \r\n\r\n```html\r\n<script src='virtualjoystick.js'></script>\r\n```\r\n\r\nYou can install with [bower](http://bower.io/).\r\n\r\n```bash\r\nbower install virtualjoystick.js\r\n```\r\n\r\nthen you add that in your html\r\n\r\n```html\r\n<script src=\"bower_components/virtualjoystick.js/virtualjoystick.js\"></script>\r\n```\r\n\r\n\r\nHow To Use It ?\r\n===============\r\n\r\n* the Joystick and optional fire Button are very customizable\r\n* ```opts.container``` is the\r\n[dom element](https://developer.mozilla.org/en/DOM/element)\r\non which we display joystick\r\n* ```opts.stickElement``` is the\r\n[dom element](https://developer.mozilla.org/en/DOM/element)\r\nwhich is display for the *stick* of the joystick.\r\n* ```opts.baseElement``` is the \r\n[dom element](https://developer.mozilla.org/en/DOM/element)\r\nwhich is display for its *base*.\r\n* Both elements are optional with sensible default\r\n* you may set ```opts.mouseSupport``` to true during debug.\r\n* you may set ```opts.stationaryBase``` to true for a permanent Stationary joystick base.\r\n* if you do use a stationary base, you must also set ```opts.baseX``` to the desired X-coordinate on the webpage and ```opts.baseY``` to the desired Y-coordinate.  The joystick base will now be fixed at this location.\r\n* you may set ```opts.limitStickTravel``` to true in order to limit the distance that the stick can travel from its base.  This will create an invisible circle barrier that the stick cannot leave. \r\n* if you do use ```opts.limitStickTravel``` , you can also set ```opts.stickRadius``` to the desired radius (in pixels).  The stick will now be confined to stickRadius.  If you do not set ```opts.stickRadius``` , it will default to 100 pixels radius.\r\n\r\nHow to Use Fire Button\r\n----------------------\r\n* first, set ```opts.addButton``` to true\r\n* if you have a Stationary-Base Joystick, then by default, the Joystick will appear on the right and the Fire Button will appear on the left.\r\n* you may set ```opts.switchHands``` to true in order to switch this placement: Joystick on left, Fire Button on right.\r\n* by default, the offset Width between Joystick and Button is 400 px.  This can be changed by setting ```opts.buttonOffset``` to the desired integer, for example, 600.\r\n* By default the Button will always be placed at the same Height on the page as the Joystick Base.\r\n* You may manually change the Button's location by setting ```opts.buttonX``` and ```opts.buttonY``` to the desired page X and Y coordinates.\r\n* The fire Button has a simple boolean flag attached to it called ```.buttonPressed``` which is true if pressed, false if not pressed.  If your VirtualJoystick object is called 'joystick', then this would become ```joystick.buttonPressed```\r\n* Inside your game loop, test if ```joystick.buttonPressed``` is true, and perform the appropriate action in your code, such as 'Fire bullet'.  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}